aliases:
  - &restore-cache
    keys:
      - v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
      # Fallback in case checksum fails
      - v1-dependencies-{{ .Branch }}-
  - &save-cache
    paths:
      - node_modules
    key: v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}

  - &restore-cache-website
    keys:
      - v1-website-dependencies-{{ .Branch }}-{{ checksum "website/package.json" }}
      # Fallback in case checksum fails
      - v1-website-dependencies-{{ .Branch }}-
  - &save-cache-website
    paths:
      - website/node_modules
    key: v1-website-dependencies-{{ .Branch }}-{{ checksum "website/package.json" }}

  - &restore-cache-danger
    keys:
      - v1-danger-dependencies-{{ .Branch }}-{{ checksum "danger/package.json" }}
      # Fallback in case checksum fails
      - v1-danger-dependencies-{{ .Branch }}-
  - &save-cache-danger
    paths:
      - danger/node_modules
    key: v1-danger-dependencies-{{ .Branch }}-{{ checksum "danger/package.json" }}

  - &restore-cache-android
    keys:
      - v1-android-dependencies-{{ .Branch }}-{{ checksum "ReactAndroid/build.gradle" }}
      # Fallback in case checksum fails
      - v1-android-dependencies-{{ .Branch }}-
  - &save-cache-android
    paths:
     - "ReactAndroid/build/downloads"
    key: v1-android-dependencies-{{ .Branch }}-{{ checksum "ReactAndroid/build.gradle" }}

  - &restore-cache-buck
    keys:
# TODO: Pick file to checksum against
      - v1-buck-dependencies-{{ .Branch }}
  - &save-cache-buck
    paths:
     - "/home/circleci/buck"
    key: v1-buck-dependencies-{{ .Branch }}

version: 2
jobs:
  test-node-8:
    working_directory: ~/react-native
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run: npm install --no-package-lock
      - run: |
          npm run lint
          npm run flow -- check
          npm test -- --maxWorkers=1

  test-node-6:
    working_directory: ~/react-native
    docker:
      - image: circleci/node:6.11.0
    steps:
      - checkout
      - run: npm install --no-package-lock
      - run: |
          npm run lint
          npm run flow -- check
          npm test -- --maxWorkers=1

  test-node-4:
    working_directory: ~/react-native
    docker:
      - image: circleci/node:4.8.4
    steps:
      - checkout
      - run: npm install --no-package-lock
      - run: |
          npm run lint
          npm run flow -- check
          npm test -- --maxWorkers=1

  build-js-bundle:
    working_directory: ~/react-native
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run: npm install --no-package-lock
      - run:
          name: Building JS bundle for instrumentation tests
          command: node local-cli/cli.js bundle --max-workers 1 --platform android --dev true --entry-file ReactAndroid/src/androidTest/js/TestBundle.js --bundle-output ReactAndroid/src/androidTest/assets/AndroidTestBundle.js
      - persist_to_workspace:
          root: ReactAndroid/src/androidTest/assets/
          paths:
            - AndroidTestBundle.js

  test-android:
    working_directory: ~/react-native
    docker:
      - image: circleci/openjdk:8-jdk
    environment:
      - TERM: "dumb"
      - ADB_INSTALL_TIMEOUT: 10
      - GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx512m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - attach_workspace:
          at: ReactAndroid/src/androidTest/assets/
      - run: |
          if [[ ! -e ReactAndroid/src/androidTest/assets/AndroidTestBundle.js ]]; then
            echo "JS bundle missing, verify build-js-bundle step"; exit 1
          else
            echo "JS bundle found.";
          fi
# dependencies
      - run: echo 'export PATH=~/$CIRCLE_PROJECT_REPONAME/gradle-2.9/bin:/home/circleci/buck/bin:$PATH'
      - run:
          name: Setting up Buck and Android dependencies
          command: |
            if [[ ! -e /home/circleci/buck ]]; then
              git clone https://github.com/facebook/buck.git /home/circleci/buck;
            fi
            cd /home/circleci/buck && ant
            buck --version
            source scripts/circle-ci-android-setup.sh && getAndroidSDK
            buck fetch ReactAndroid/src/test/java/com/facebook/react/modules
            buck fetch ReactAndroid/src/main/java/com/facebook/react
            buck fetch ReactAndroid/src/main/java/com/facebook/react/shell
            buck fetch ReactAndroid/src/test/...
            buck fetch ReactAndroid/src/androidTest/...
            ./gradlew :ReactAndroid:downloadBoost :ReactAndroid:downloadDoubleConversion :ReactAndroid:downloadFolly :ReactAndroid:downloadGlog :ReactAndroid:downloadJSCHeaders
      - run:
          name: Starting Android emulator in advance
          command: $ANDROID_HOME/tools/emulator -avd testAVD -no-skin -no-audio -no-window
          background: true
      - run: source scripts/circle-ci-android-setup.sh && waitForAVD
# tests
      - run:
          name: Build app
          command: |
            buck build ReactAndroid/src/main/java/com/facebook/react
            buck build ReactAndroid/src/main/java/com/facebook/react/shell
      - run:
          name: Compile native libs for unit and integration tests
          command: ./gradlew :ReactAndroid:packageReactNdkLibsForBuck -Pjobs=1 -Pcom.android.build.threadPoolSize=1
          no_output_timeout: 6m
      - run:
          name: Running unit tests
          command: buck test ReactAndroid/src/test/... --config build.threads=1
# integration tests
# Failing test
#      - run:
#          name: Building test APK
#          command: buck install ReactAndroid/src/androidTest/buck-runner:instrumentation-tests --config build.threads=1
#      - run:
#          name: Run installed APK with tests
#          command: node ./scripts/run-android-ci-instrumentation-tests.js --retries 3 --path ./ReactAndroid/src/androidTest/java/com/facebook/react/tests --package com.facebook.react.tests
# disabled pending on https://our.intern.facebook.com/intern/tasks?t=16912142
#      - run:
#          name: Running Android end to end tests
#          command: source scripts/circle-ci-android-setup.sh && retry3 node ./scripts/run-ci-e2e-tests.js --android --js --retries 2

# post (always runs)
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/debug/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/outputs/androidTest-results/connected/.*xml" -exec cp {} ~/junit/ \;
# TODO circle does not understand Buck's report, maybe need to transform xml slightly
#           find . -type f -regex ".*/buck-out/gen/ReactAndroid/src/test/.*/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

# Workflows enables us to run multiple jobs in parallel
workflows:
  version: 2
  test_node:
    jobs:
      - test-node-8
      - test-node-6
      - test-node-4
  test_android:
    jobs:
      - build-js-bundle:
          filters:
            branches:
              ignore: gh-pages
      - test-android:
          requires:
            - build-js-bundle
