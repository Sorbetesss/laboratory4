aliases:
  - &restore-cache
    keys:
      - v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
      # Fallback in case checksum fails
      - v1-dependencies-{{ .Branch }}-
  - &save-cache
    paths:
      - node_modules
    key: v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}

  - &restore-cache-website
    keys:
      - v1-website-dependencies-{{ .Branch }}-{{ checksum "website/package.json" }}
      # Fallback in case checksum fails
      - v1-website-dependencies-{{ .Branch }}-
  - &save-cache-website
    paths:
      - website/node_modules
    key: v1-website-dependencies-{{ .Branch }}-{{ checksum "website/package.json" }}

  - &restore-cache-danger
    keys:
      - v1-danger-dependencies-{{ .Branch }}-{{ checksum "danger/package.json" }}
      # Fallback in case checksum fails
      - v1-danger-dependencies-{{ .Branch }}-
  - &save-cache-danger
    paths:
      - danger/node_modules
    key: v1-danger-dependencies-{{ .Branch }}-{{ checksum "danger/package.json" }}

  - &restore-cache-android
    keys:
      - v1-android-dependencies-{{ .Branch }}-{{ checksum "ReactAndroid/build.gradle" }}
      # Fallback in case checksum fails
      - v1-android-dependencies-{{ .Branch }}-
  - &save-cache-android
    paths:
     - "ReactAndroid/build/downloads"
    key: v1-android-dependencies-{{ .Branch }}-{{ checksum "ReactAndroid/build.gradle" }}

  - &restore-cache-buck
    keys:
# TODO: Pick file to checksum against
      - v1-buck-dependencies-{{ .Branch }}
  - &save-cache-buck
    paths:
     - "~/buck"
    key: v1-buck-dependencies-{{ .Branch }}

  - &restore-cache-ndk
    keys:
      - v1-android-ndk-r10e-{{ .Branch }}
  - &save-cache-ndk
    paths:
      - ~/ndk
    key: v1-android-ndk-r10e-{{ .Branch }}

  - &restore-cache-buck
    keys:
      - v1-buck-v2017.09.04.02-{{ .Branch }}
  - &save-cache-buck
    paths:
      - ~/buck
    key: v1-buck-v2017.09.04.02-{{ .Branch }}

  - &restore-cache-watchman
    keys:
      - v1-watchman-v4.9.0-{{ .Branch }}
  - &save-cache-watchman
    paths:
      - ~/watchman
    key: v1-watchman-v4.9.0-{{ .Branch }}

defaults: &defaults
  working_directory: ~/react-native

version: 2
jobs:
  test-node-8:
    <<: *defaults
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run: npm install --no-package-lock
      - run: |
          npm run lint
          npm run flow -- check
          npm test -- --maxWorkers=1

  test-node-6:
    <<: *defaults
    docker:
      - image: circleci/node:6.11.0
    steps:
      - checkout
      - run: npm install
      - run: |
          npm run lint
          npm run flow -- check
          npm test -- --maxWorkers=1

  test-node-4:
    <<: *defaults
    docker:
      - image: circleci/node:4.8.4
    steps:
      - checkout
      - run: npm install
      - run: |
          npm run lint
          npm run flow -- check
          npm test -- --maxWorkers=1

  build-js-bundle:
    <<: *defaults
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run: npm install --no-package-lock
      - run:
          name: Build JavaScript Bundle
          command: node local-cli/cli.js bundle --max-workers 1 --platform android --dev true --entry-file ReactAndroid/src/androidTest/js/TestBundle.js --bundle-output ReactAndroid/src/androidTest/assets/AndroidTestBundle.js
      - persist_to_workspace:
          root: ReactAndroid/src/androidTest/assets/
          paths:
            - AndroidTestBundle.js

  test-android:
    <<: *defaults
    docker:
      - image: circleci/android:api-23-alpha
    environment:
      - TERM: "dumb"
      - ADB_INSTALL_TIMEOUT: 10
      - GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx512m -XX:+HeapDumpOnOutOfMemoryError"'
      - ANDROID_NDK: '~/ndk/android-ndk-r10e'
    steps:
      - checkout
# The JavaScript Bundle is built as part of the build-js-bundle workflow.
      - attach_workspace:
          at: ReactAndroid/src/androidTest/assets/
      - run:
          name: Check for JavaScript Bundle
          command: |
            if [[ ! -e ReactAndroid/src/androidTest/assets/AndroidTestBundle.js ]]; then
              echo "JavaScript bundle missing, verify build-js-bundle step"; exit 1;
            else
              echo "JavaScript bundle found.";
            fi
# CircleCI does not support interpolating env variables in the environment: step above.
# https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables-to-set-other-environment-variables
      - run:
          name: Configure PATH
          command: |
            echo 'export PATH=$ANDROID_NDK:$PATH' >> $BASH_ENV
            echo 'export PATH=~/react-native/gradle-2.9/bin:~/buck/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
# Configure dependencies
      - run:
          name: Install Build Dependencies
          command: |
            sudo apt-get update -y
            sudo apt-get install ant autoconf automake g++ gcc libqt5widgets5 lib32z1 lib32stdc++6 libtool make maven python-dev python3-dev qml-module-qtquick-controls qtdeclarative5-dev -y
      - run:
          name: Configure Android SDK and Android Virtual Device
          command: source scripts/circle-ci-android-setup.sh && getAndroidSDK
# Starting emulator in advance as it takes some time to boot.
      - run:
          name: Launch Android Virtual Device
          command: emulator64-arm -avd testAVD -no-audio -no-window -no-boot-anim -gpu off
          background: true
# Continue configuring dependencies while AVD boots.
      - restore-cache: *restore-cache-ndk
      - run:
          name: Install Android NDK
          command: |
            if [[ ! -e ~/ndk ]]; then
              mkdir ~/ndk
              cd ~/ndk
              curl -o ndk.zip --silent https://dl.google.com/android/repository/android-ndk-r10e-linux-x86.zip
              curl -o ndk_64.zip --silent https://dl.google.com/android/repository/android-ndk-r10e-linux-x86_64.zip
              unzip -o ndk.zip
              unzip -o ndk_64.zip
              rm ndk.zip
              rm ndk_64.zip
            fi
      - save-cache: *save-cache-ndk
      - restore-cache: *restore-cache-buck
      - run:
          name: Install Buck
          command: |
            if [[ ! -e ~/buck ]]; then
              git clone https://github.com/facebook/buck.git ~/buck
              cd ~/buck
              git checkout v2017.09.04.02
            fi
            cd ~/buck && ant
            buck --version
      - save-cache: *save-cache-buck
      - restore-cache: *restore-cache-watchman
      - run:
          name: Install Watchman
          command: |
            if [[ ! -e ~/watchman ]]; then
              mkdir ~/watchman
              git clone https://github.com/facebook/watchman.git ~/watchman
              cd ~/watchman
              git checkout v4.9.0
              ./autogen.sh
              ./configure
              make
              sudo make install
            fi
      - save-cache: *save-cache-watchman
      - run:
          name: Download Android Dependencies
          command: |
            buck fetch ReactAndroid/src/test/java/com/facebook/react/modules
            buck fetch ReactAndroid/src/main/java/com/facebook/react
            buck fetch ReactAndroid/src/main/java/com/facebook/react/shell
            buck fetch ReactAndroid/src/test/...
            buck fetch ReactAndroid/src/androidTest/...
            ./gradlew :ReactAndroid:downloadBoost :ReactAndroid:downloadDoubleConversion :ReactAndroid:downloadFolly :ReactAndroid:downloadGlog :ReactAndroid:downloadJSCHeaders

# Wait for AVD to finish booting before running tests
      - run:
          name: Wait for Android Virtual Device
          command: source scripts/circle-ci-android-setup.sh && waitForAVD
# Tests
      - run:
          name: Build Android App
          command: |
            buck build ReactAndroid/src/main/java/com/facebook/react
            buck build ReactAndroid/src/main/java/com/facebook/react/shell
      - run:
          name: Compile Native Libs for Unit and Integration Tests
          command: ./gradlew :ReactAndroid:packageReactNdkLibsForBuck -Pjobs=2 -Pcom.android.build.threadPoolSize=1
          no_output_timeout: 6m
      - run:
          name: Unit Tests
          command: buck test ReactAndroid/src/test/... --config build.threads=2
# Integration Tests
# Failing test is expected
      - run:
          name: Build and Install Test APK
          command: buck install ReactAndroid/src/androidTest/buck-runner:instrumentation-tests --config build.threads=2
      - run:
          name: Run Installed APK with Tests
          command: node ./scripts/run-android-ci-instrumentation-tests.js --retries 3 --path ./ReactAndroid/src/androidTest/java/com/facebook/react/tests --package com.facebook.react.tests
# Should be disabled pending on https://our.intern.facebook.com/intern/tasks?t=16912142
      - run:
          name: Run Android End to End Tests
          command: source scripts/circle-ci-android-setup.sh && retry3 node ./scripts/run-ci-e2e-tests.js --android --js --retries 2

# post (always runs)
      - run:
          name: Collect Test Results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/debug/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/outputs/androidTest-results/connected/.*xml" -exec cp {} ~/junit/ \;
# TODO circle does not understand Buck's report, maybe need to transform xml slightly
#           find . -type f -regex ".*/buck-out/gen/ReactAndroid/src/test/.*/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

# Workflows enables us to run multiple jobs in parallel
workflows:
  version: 2
  test_node:
    jobs:
      - test-node-8
      - test-node-6
# Node 4 is expected to fail - that was already the case w/ Circle 1.0
      - test-node-4
  test_android:
    jobs:
      - build-js-bundle:
          filters:
            branches:
              ignore: gh-pages
      - test-android:
          requires:
            - build-js-bundle
