name: build-apple-slices-hermes
description: This action builds hermesc for Apple platforms
inputs:
  HERMES_VERSION:
    required: true
    description: The version of Hermes
  REACT_NATIVE_VERSION:
    required: true
    description: The version of Hermes
  SLICE:
    required: true
    description: The slice of hermes you want to build. It could be iphone, iphonesimulator, macos, catalyst, xros, or xrossimulator
  FLAVOR:
    required: true
    description: The flavor we want to build. It can be Debug or Release
runs:
  using: composite
  steps:
    - name: Setup xcode
      uses: ./.github/actions/setup-xcode
    - name: Restore Hermes workspace
      uses: ./.github/actions/restore-hermes-workspace
    - name: Restore HermesC Artifact
      uses: actions/download-artifact@v4.1.3
      with:
        name: hermesc-apple
        path: ./packages/react-native/sdks/hermes/build_host_hermesc
    - name: Restore Slice From Cache
      id: restore-slice-cache
      uses: actions/cache/restore@v4.0.0
      with:
        path: ./packages/react-native/sdks/hermes/build_${{ inputs.SLICE }}_${{ inputs.FLAVOR }}
        key: v4-hermes-apple-${{ inputs.HERMES_VERSION }}-${{ inputs.REACT_NATIVE_VERSION }}-${{ hashfiles('packages/react-native/sdks/hermes-engine/utils/build-apple-framework.sh') }}-${{ inputs.SLICE }}-${{ inputs.FLAVOR }}
    - name: Build the Hermes ${{ inputs.SLICE }} frameworks
      shell: bash
      run: |
        cd ./packages/react-native/sdks/hermes || exit 1
        SLICE=${{ inputs.SLICE }}
        FLAVOR=${{ inputs.FLAVOR }}
        FINAL_PATH=build_"$SLICE"_"$FLAVOR"
        echo "Final path for this slice is: $FINAL_PATH"

        if [[ -d "$FINAL_PATH" ]]; then
          echo "[HERMES] Skipping! Found the requested slice at $FINAL_PATH".
          exit 0
        fi

        if [[ "$ARTIFACTS_EXIST" ]]; then
          echo "[HERMES] Skipping! Artifacts exists already."
          exit 0
        fi

        export RELEASE_VERSION=${{ inputs.REACT_NATIVE_VERSION }}

        # HermesC is used to build hermes, so it has to be executable
        chmod +x ./build_host_hermesc/bin/hermesc

        if [[ "$SLICE" == "macosx" ]]; then
          echo "[HERMES] Building Hermes for MacOS"

          chmod +x ./utils/build-mac-framework.sh
          BUILD_TYPE="${{ inputs.FLAVOR }}" ./utils/build-mac-framework.sh
        else
          echo "[HERMES] Building Hermes for iOS: $SLICE"

          chmod +x ./utils/build-ios-framework.sh
          BUILD_TYPE="${{ inputs.FLAVOR }}" ./utils/build-ios-framework.sh "$SLICE"
        fi

        echo "Moving from build_$SLICE to $FINAL_PATH"
        mv build_"$SLICE" "$FINAL_PATH"

        # check whether everything is there
        if [[ -d "$FINAL_PATH/API/hermes/hermes.framework" ]]; then
          echo "Successfully built hermes.framework for $SLICE in $FLAVOR"
        else
          echo "Failed to built hermes.framework for $SLICE in $FLAVOR"
          exit 1
        fi

        if [[ -d "$FINAL_PATH/API/hermes/hermes.framework.dSYM" ]]; then
          echo "Successfully built hermes.framework.dSYM for $SLICE in $FLAVOR"
        else
          echo "Failed to built hermes.framework.dSYM for $SLICE in $FLAVOR"
          echo "Please try again"
          exit 1
        fi
    - name: Upload Artifact for Slice (${{ inputs.SLICE }}, ${{ inputs.FLAVOR }}}
      uses: actions/upload-artifact@v4.3.1
      with:
        name: slice-${{ inputs.SLICE }}-${{ inputs.FLAVOR }}
        path: ./packages/react-native/sdks/hermes/build_${{ inputs.SLICE }}_${{ inputs.FLAVOR }}
    - name: Save slice cache
      if: ${{ github.ref == 'refs/heads/main' || contains(github.ref, '-stable') }} # To avoid that the cache explode.
      uses: actions/cache/save@v4.0.0
      with:
        path: ./packages/react-native/sdks/hermes/build_${{ inputs.SLICE }}_${{ inputs.FLAVOR }}
        key: v4-hermes-apple-${{ inputs.HERMES_VERSION }}-${{ inputs.REACT_NATIVE_VERSION }}-${{ hashfiles('packages/react-native/sdks/hermes-engine/utils/build-apple-framework.sh') }}-${{ inputs.SLICE }}-${{ inputs.FLAVOR }}
