// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenerateComponentDescriptorH can generate fixture ARRAY_PROPS 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/ARRAY_PROPS/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using ArrayPropsNativeComponentComponentDescriptor = ConcreteComponentDescriptor<ArrayPropsNativeComponentShadowNode>;

inline void ARRAY_PROPS_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<ArrayPropsNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture ARRAY_PROPS_WITH_NESTED_OBJECT 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/ARRAY_PROPS_WITH_NESTED_OBJECT/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using ArrayPropsNativeComponentComponentDescriptor = ConcreteComponentDescriptor<ArrayPropsNativeComponentShadowNode>;

inline void ARRAY_PROPS_WITH_NESTED_OBJECT_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<ArrayPropsNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture BOOLEAN_PROP 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/BOOLEAN_PROP/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using BooleanPropNativeComponentComponentDescriptor = ConcreteComponentDescriptor<BooleanPropNativeComponentShadowNode>;

inline void BOOLEAN_PROP_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<BooleanPropNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture COLOR_PROP 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/COLOR_PROP/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using ColorPropNativeComponentComponentDescriptor = ConcreteComponentDescriptor<ColorPropNativeComponentShadowNode>;

inline void COLOR_PROP_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<ColorPropNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture COMMANDS 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/COMMANDS/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using CommandNativeComponentComponentDescriptor = ConcreteComponentDescriptor<CommandNativeComponentShadowNode>;

inline void COMMANDS_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<CommandNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture COMMANDS_AND_PROPS 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/COMMANDS_AND_PROPS/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using CommandNativeComponentComponentDescriptor = ConcreteComponentDescriptor<CommandNativeComponentShadowNode>;

inline void COMMANDS_AND_PROPS_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<CommandNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture DIMENSION_PROP 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/DIMENSION_PROP/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using DimensionPropNativeComponentComponentDescriptor = ConcreteComponentDescriptor<DimensionPropNativeComponentShadowNode>;

inline void DIMENSION_PROP_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<DimensionPropNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture DOUBLE_PROPS 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/DOUBLE_PROPS/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using DoublePropNativeComponentComponentDescriptor = ConcreteComponentDescriptor<DoublePropNativeComponentShadowNode>;

inline void DOUBLE_PROPS_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<DoublePropNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture EVENT_NESTED_OBJECT_PROPS 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/EVENT_NESTED_OBJECT_PROPS/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using EventsNestedObjectNativeComponentComponentDescriptor = ConcreteComponentDescriptor<EventsNestedObjectNativeComponentShadowNode>;

inline void EVENT_NESTED_OBJECT_PROPS_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<EventsNestedObjectNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture EVENT_PROPS 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/EVENT_PROPS/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using EventsNativeComponentComponentDescriptor = ConcreteComponentDescriptor<EventsNativeComponentShadowNode>;

inline void EVENT_PROPS_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<EventsNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture EVENTS_WITH_PAPER_NAME 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/EVENTS_WITH_PAPER_NAME/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {



inline void EVENTS_WITH_PAPER_NAME_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture EXCLUDE_ANDROID 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/EXCLUDE_ANDROID/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using ExcludedAndroidComponentComponentDescriptor = ConcreteComponentDescriptor<ExcludedAndroidComponentShadowNode>;

inline void EXCLUDE_ANDROID_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<ExcludedAndroidComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture EXCLUDE_ANDROID_IOS 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/EXCLUDE_ANDROID_IOS/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using ExcludedAndroidIosComponentComponentDescriptor = ConcreteComponentDescriptor<ExcludedAndroidIosComponentShadowNode>;

inline void EXCLUDE_ANDROID_IOS_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<ExcludedAndroidIosComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture EXCLUDE_IOS_TWO_COMPONENTS_DIFFERENT_FILES 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/EXCLUDE_IOS_TWO_COMPONENTS_DIFFERENT_FILES/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using ExcludedIosComponentComponentDescriptor = ConcreteComponentDescriptor<ExcludedIosComponentShadowNode>;
using MultiFileIncludedNativeComponentComponentDescriptor = ConcreteComponentDescriptor<MultiFileIncludedNativeComponentShadowNode>;

inline void EXCLUDE_IOS_TWO_COMPONENTS_DIFFERENT_FILES_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<ExcludedIosComponentComponentDescriptor>());
  providerRegistry->add(concreteComponentDescriptorProvider<MultiFileIncludedNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture FLOAT_PROPS 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/FLOAT_PROPS/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using FloatPropNativeComponentComponentDescriptor = ConcreteComponentDescriptor<FloatPropNativeComponentShadowNode>;

inline void FLOAT_PROPS_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<FloatPropNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture IMAGE_PROP 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/IMAGE_PROP/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using ImagePropNativeComponentComponentDescriptor = ConcreteComponentDescriptor<ImagePropNativeComponentShadowNode>;

inline void IMAGE_PROP_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<ImagePropNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture INSETS_PROP 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/INSETS_PROP/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using InsetsPropNativeComponentComponentDescriptor = ConcreteComponentDescriptor<InsetsPropNativeComponentShadowNode>;

inline void INSETS_PROP_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<InsetsPropNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture INT32_ENUM_PROP 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/INT32_ENUM_PROP/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using Int32EnumPropsNativeComponentComponentDescriptor = ConcreteComponentDescriptor<Int32EnumPropsNativeComponentShadowNode>;

inline void INT32_ENUM_PROP_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<Int32EnumPropsNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture INTEGER_PROPS 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/INTEGER_PROPS/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using IntegerPropNativeComponentComponentDescriptor = ConcreteComponentDescriptor<IntegerPropNativeComponentShadowNode>;

inline void INTEGER_PROPS_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<IntegerPropNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture INTERFACE_ONLY 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/INTERFACE_ONLY/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {



inline void INTERFACE_ONLY_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture MIXED_PROP 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/MIXED_PROP/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using MixedPropNativeComponentComponentDescriptor = ConcreteComponentDescriptor<MixedPropNativeComponentShadowNode>;

inline void MIXED_PROP_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<MixedPropNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture MULTI_NATIVE_PROP 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/MULTI_NATIVE_PROP/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using ImageColorPropNativeComponentComponentDescriptor = ConcreteComponentDescriptor<ImageColorPropNativeComponentShadowNode>;

inline void MULTI_NATIVE_PROP_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<ImageColorPropNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture NO_PROPS_NO_EVENTS 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/NO_PROPS_NO_EVENTS/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using NoPropsNoEventsComponentComponentDescriptor = ConcreteComponentDescriptor<NoPropsNoEventsComponentShadowNode>;

inline void NO_PROPS_NO_EVENTS_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<NoPropsNoEventsComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture OBJECT_PROPS 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/OBJECT_PROPS/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using ObjectPropsComponentDescriptor = ConcreteComponentDescriptor<ObjectPropsShadowNode>;

inline void OBJECT_PROPS_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<ObjectPropsComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture POINT_PROP 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/POINT_PROP/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using PointPropNativeComponentComponentDescriptor = ConcreteComponentDescriptor<PointPropNativeComponentShadowNode>;

inline void POINT_PROP_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<PointPropNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture STRING_ENUM_PROP 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/STRING_ENUM_PROP/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using StringEnumPropsNativeComponentComponentDescriptor = ConcreteComponentDescriptor<StringEnumPropsNativeComponentShadowNode>;

inline void STRING_ENUM_PROP_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<StringEnumPropsNativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture STRING_PROP 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/STRING_PROP/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using StringPropComponentComponentDescriptor = ConcreteComponentDescriptor<StringPropComponentShadowNode>;

inline void STRING_PROP_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<StringPropComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture TWO_COMPONENTS_DIFFERENT_FILES 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/TWO_COMPONENTS_DIFFERENT_FILES/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using MultiFile1NativeComponentComponentDescriptor = ConcreteComponentDescriptor<MultiFile1NativeComponentShadowNode>;
using MultiFile2NativeComponentComponentDescriptor = ConcreteComponentDescriptor<MultiFile2NativeComponentShadowNode>;

inline void TWO_COMPONENTS_DIFFERENT_FILES_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<MultiFile1NativeComponentComponentDescriptor>());
  providerRegistry->add(concreteComponentDescriptorProvider<MultiFile2NativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateComponentDescriptorH can generate fixture TWO_COMPONENTS_SAME_FILE 1`] = `
Map {
  "ComponentDescriptors.h" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateComponentDescriptorH.js
 */

#pragma once

#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
#include <react/renderer/components/TWO_COMPONENTS_SAME_FILE/ShadowNodes.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>

namespace facebook {
namespace react {

using MultiComponent1NativeComponentComponentDescriptor = ConcreteComponentDescriptor<MultiComponent1NativeComponentShadowNode>;
using MultiComponent2NativeComponentComponentDescriptor = ConcreteComponentDescriptor<MultiComponent2NativeComponentShadowNode>;

inline void TWO_COMPONENTS_SAME_FILE_registerComponentDescriptors(std::shared_ptr<ComponentDescriptorProviderRegistry const> providerRegistry) {
  providerRegistry->add(concreteComponentDescriptorProvider<MultiComponent1NativeComponentComponentDescriptor>());
  providerRegistry->add(concreteComponentDescriptorProvider<MultiComponent2NativeComponentComponentDescriptor>());
}

} // namespace react
} // namespace facebook
",
}
`;
